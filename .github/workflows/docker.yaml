# This workflow builds docker images on 'master' and for all release tags. The
# 'latest' docker tag on the registry will always point to the latest pushed
# version, likely the one built from 'master', so referring to the versioned
# images is suggested.
name: Docker

# Limit concurrent runs of this workflow within a single PR
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ "master" ]
    tags: [ "*.*.*" ]
  workflow_dispatch:
    inputs:
      ref_name:
        type: string
        description: 'Point-in-time to build the custom docker images'
        required: true
        default: "master"

permissions:
  packages: write

jobs:
  docker:
    strategy:
      matrix:
        target: [ hydra-node, hydra-tui, hydraw, hydra-chain-observer ]

    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.ref_name || '' }}

    - name: 🐳 Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: ❄ Setup Nix/Cachix
      uses: ./.github/actions/nix-cachix-setup
      with:
        authToken: '${{ secrets.CACHIX_CARDANO_SCALING_AUTH_TOKEN }}'

    - name: 🔨 Build image using nix
      run: |
        IMAGE_NAME=ghcr.io/${{github.repository_owner}}/${{matrix.target}}
        echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_ENV
        nix build .#docker-${{ matrix.target }}
        docker load < result

    - name: 🏷️ Tag images
      run: |

        # Determine whether we are building a tag and if yes, set a
        # VERSION_NAME, if not, use `unstable` as the version name.
        BUILDING_TAG=${{github.ref_type == 'tag'}}
        VERSION_NAME=unstable
        [[ ${BUILDING_TAG} = true ]] && \
          VERSION_NAME=${{github.ref_name}}

        # Use 'FROM' instruction to use docker build with --label
        echo "FROM ${{matrix.target}}" | docker build \
          --label org.opencontainers.image.source=https://github.com/cardano-scaling/hydra \
          --label org.opencontainers.image.licenses=Apache-2.0 \
          --label org.opencontainers.image.created=$(date -Is) \
          --label org.opencontainers.image.revision=${{github.sha}} \
          --label org.opencontainers.image.version=${VERSION_NAME} \
          --tag ${IMAGE_NAME}:${VERSION_NAME} -

        # If we're running on the release branch, tag it as `latest`
        [[ ${GITHUB_REF_NAME} = "release" ]] && \
          docker tag ${IMAGE_NAME} ${IMAGE_NAME}:latest

        # Also tag with version if we are building a tag
        [[ ${BUILDING_TAG} = true && ${{matrix.target}} != "hydraw" ]] && \
          docker tag ${IMAGE_NAME} ${IMAGE_NAME}:${VERSION_NAME}

        # Also tag with ref name when manually dispatched
        [[ ${{github.event_name == 'workflow_dispatch'}} = true ]] && \
          docker tag ${IMAGE_NAME} ${IMAGE_NAME}:workflow_dispatch-${{github.event.inputs.ref_name}}

        docker inspect ${IMAGE_NAME}
        docker images

    - name: 📤 Push to registry
      run: |
        docker push -a ${IMAGE_NAME}
